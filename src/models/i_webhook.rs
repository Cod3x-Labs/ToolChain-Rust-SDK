/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IWebhook {
    #[serde(rename = "block")]
    pub block: Box<crate::models::Block>,
    #[serde(rename = "chainId")]
    pub chain_id: String,
    #[serde(rename = "logs")]
    pub logs: Vec<crate::models::Log>,
    #[serde(rename = "txs")]
    pub txs: Vec<crate::models::Transaction>,
    #[serde(rename = "txsInternal")]
    pub txs_internal: Vec<crate::models::InternalTransaction>,
    #[serde(rename = "abi")]
    pub abi: Vec<crate::models::AbiItem>,
    #[serde(rename = "retries")]
    pub retries: f64,
    #[serde(rename = "confirmed")]
    pub confirmed: bool,
    #[serde(rename = "tag")]
    pub tag: String,
    #[serde(rename = "streamId")]
    pub stream_id: String,
    #[serde(rename = "erc20Transfers")]
    pub erc20_transfers: Vec<crate::models::Ierc20Transfer>,
    #[serde(rename = "erc20Approvals")]
    pub erc20_approvals: Vec<crate::models::Ierc20Approval>,
    #[serde(rename = "nftTransfers")]
    pub nft_transfers: Vec<crate::models::InftTransfer>,
    #[serde(rename = "nativeBalances")]
    pub native_balances: Vec<crate::models::INativeBalance>,
    #[serde(rename = "nftApprovals")]
    pub nft_approvals: Box<crate::models::IOldNftApproval>,
    #[serde(rename = "nftTokenApprovals")]
    pub nft_token_approvals: Vec<crate::models::InftApproval>,
}

impl IWebhook {
    pub fn new(block: crate::models::Block, chain_id: String, logs: Vec<crate::models::Log>, txs: Vec<crate::models::Transaction>, txs_internal: Vec<crate::models::InternalTransaction>, abi: Vec<crate::models::AbiItem>, retries: f64, confirmed: bool, tag: String, stream_id: String, erc20_transfers: Vec<crate::models::Ierc20Transfer>, erc20_approvals: Vec<crate::models::Ierc20Approval>, nft_transfers: Vec<crate::models::InftTransfer>, native_balances: Vec<crate::models::INativeBalance>, nft_approvals: crate::models::IOldNftApproval, nft_token_approvals: Vec<crate::models::InftApproval>) -> IWebhook {
        IWebhook {
            block: Box::new(block),
            chain_id,
            logs,
            txs,
            txs_internal,
            abi,
            retries,
            confirmed,
            tag,
            stream_id,
            erc20_transfers,
            erc20_approvals,
            nft_transfers,
            native_balances,
            nft_approvals: Box::new(nft_approvals),
            nft_token_approvals,
        }
    }
}


