/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Ierc20Approval {
    #[serde(rename = "transactionHash")]
    pub transaction_hash: String,
    #[serde(rename = "contract")]
    pub contract: String,
    #[serde(rename = "logIndex")]
    pub log_index: String,
    #[serde(rename = "owner")]
    pub owner: String,
    #[serde(rename = "spender")]
    pub spender: String,
    #[serde(rename = "value")]
    pub value: String,
    #[serde(rename = "tokenDecimals")]
    pub token_decimals: String,
    #[serde(rename = "tokenName")]
    pub token_name: String,
    #[serde(rename = "tokenSymbol")]
    pub token_symbol: String,
    #[serde(rename = "valueWithDecimals", skip_serializing_if = "Option::is_none")]
    pub value_with_decimals: Option<String>,
    #[serde(rename = "triggers", skip_serializing_if = "Option::is_none")]
    pub triggers: Option<Vec<crate::models::TriggerOutput>>,
}

impl Ierc20Approval {
    pub fn new(transaction_hash: String, contract: String, log_index: String, owner: String, spender: String, value: String, token_decimals: String, token_name: String, token_symbol: String) -> Ierc20Approval {
        Ierc20Approval {
            transaction_hash,
            contract,
            log_index,
            owner,
            spender,
            value,
            token_decimals,
            token_name,
            token_symbol,
            value_with_decimals: None,
            triggers: None,
        }
    }
}


