/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Chain {
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "chainType")]
    pub chain_type: ChainType,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "coin")]
    pub coin: String,
    #[serde(rename = "id")]
    pub id: f64,
    #[serde(rename = "mainnet")]
    pub mainnet: bool,
    #[serde(rename = "logoURI")]
    pub logo_uri: String,
    #[serde(rename = "tokenlistUrl")]
    pub tokenlist_url: String,
    #[serde(rename = "multicallAddress")]
    pub multicall_address: String,
    #[serde(rename = "metamask")]
    pub metamask: Box<crate::models::ChainMetamask>,
    #[serde(rename = "nativeToken")]
    pub native_token: Box<crate::models::ChainNativeToken>,
}

impl Chain {
    pub fn new(key: String, chain_type: ChainType, name: String, coin: String, id: f64, mainnet: bool, logo_uri: String, tokenlist_url: String, multicall_address: String, metamask: crate::models::ChainMetamask, native_token: crate::models::ChainNativeToken) -> Chain {
        Chain {
            key,
            chain_type,
            name,
            coin,
            id,
            mainnet,
            logo_uri,
            tokenlist_url,
            multicall_address,
            metamask: Box::new(metamask),
            native_token: Box::new(native_token),
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChainType {
    #[serde(rename = "EVM")]
    Evm,
    #[serde(rename = "SOL")]
    Sol,
}

impl Default for ChainType {
    fn default() -> ChainType {
        Self::Evm
    }
}

