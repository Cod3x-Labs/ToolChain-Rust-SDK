/*
 * moon-vault-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct QuoteRequestV2 {
    #[serde(rename = "chainId")]
    pub chain_id: f64,
    #[serde(rename = "inputTokens")]
    pub input_tokens: Vec<crate::models::TokenAmount>,
    #[serde(rename = "outputTokens")]
    pub output_tokens: Vec<crate::models::TokenProportion>,
    #[serde(rename = "gasPrice", skip_serializing_if = "Option::is_none")]
    pub gas_price: Option<f64>,
    #[serde(rename = "userAddr", skip_serializing_if = "Option::is_none")]
    pub user_addr: Option<String>,
    #[serde(rename = "slippageLimitPercent", skip_serializing_if = "Option::is_none")]
    pub slippage_limit_percent: Option<f64>,
    #[serde(rename = "sourceBlacklist", skip_serializing_if = "Option::is_none")]
    pub source_blacklist: Option<Vec<String>>,
    #[serde(rename = "sourceWhitelist", skip_serializing_if = "Option::is_none")]
    pub source_whitelist: Option<Vec<String>>,
    #[serde(rename = "poolBlacklist", skip_serializing_if = "Option::is_none")]
    pub pool_blacklist: Option<Vec<String>>,
    #[serde(rename = "pathViz", skip_serializing_if = "Option::is_none")]
    pub path_viz: Option<bool>,
    #[serde(rename = "pathVizImage", skip_serializing_if = "Option::is_none")]
    pub path_viz_image: Option<bool>,
    #[serde(rename = "pathVizImageConfig", skip_serializing_if = "Option::is_none")]
    pub path_viz_image_config: Option<Box<crate::models::PathVizImageConfig>>,
    #[serde(rename = "disableRFQs", skip_serializing_if = "Option::is_none")]
    pub disable_rfqs: Option<bool>,
    #[serde(rename = "referralCode", skip_serializing_if = "Option::is_none")]
    pub referral_code: Option<f64>,
    #[serde(rename = "compact", skip_serializing_if = "Option::is_none")]
    pub compact: Option<bool>,
    #[serde(rename = "likeAsset", skip_serializing_if = "Option::is_none")]
    pub like_asset: Option<bool>,
    #[serde(rename = "simple", skip_serializing_if = "Option::is_none")]
    pub simple: Option<bool>,
}

impl QuoteRequestV2 {
    pub fn new(chain_id: f64, input_tokens: Vec<crate::models::TokenAmount>, output_tokens: Vec<crate::models::TokenProportion>) -> QuoteRequestV2 {
        QuoteRequestV2 {
            chain_id,
            input_tokens,
            output_tokens,
            gas_price: None,
            user_addr: None,
            slippage_limit_percent: None,
            source_blacklist: None,
            source_whitelist: None,
            pool_blacklist: None,
            path_viz: None,
            path_viz_image: None,
            path_viz_image_config: None,
            disable_rfqs: None,
            referral_code: None,
            compact: None,
            like_asset: None,
            simple: None,
        }
    }
}


